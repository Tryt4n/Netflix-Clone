@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;
@use "../../base/breakpoints" as b;

.activity-page {
  background-color: c.$account-bg;
  font-size: v.$font-base;
  min-height: calc(100dvh - v.$navbar-height);

  &__header-container {
    @include flex(row, space-between, center);
    margin-bottom: 1.75em;
  }

  &__heading {
    font-size: clamp(1.5rem, 1.22rem + 1.42vw, 2.13rem);
    font-weight: normal;
    margin-bottom: 0.3em;
  }

  &__tabs-container {
    @include flex();
    gap: 2em;
  }

  &__tab {
    background: transparent;
    border: none;
    padding: 0;
    outline-offset: 0.25em;
    font: inherit;
    font-weight: normal;
    line-height: 100%;
    color: c.$viewing-restriction-input-blue;
    cursor: pointer;
    &:where(:hover) {
      text-decoration: underline;
    }
    &.active {
      color: inherit;
      cursor: default;
      text-decoration: none;
    }
    &:first-of-type {
      position: relative;
      &::after {
        content: "";
        position: absolute;
        top: 0;
        right: 0;
        width: func.rem(1);
        height: 100%;
        background-color: c.$gray-light;
        translate: 1rem;
      }
    }
  }

  &__warning-empty {
    font-size: 1.25em;
    font-weight: 500;
  }

  &__list-item {
    @include flex(row, flex-start, center);
    gap: 1em;
    font-weight: normal;
    border-top: func.rem(1) solid c.$gray-light;
    &:last-child {
      border-bottom: func.rem(1) solid c.$gray-light;
    }
    a:hover {
      text-decoration: underline;
    }
    @media screen and (width < b.$account-page-tablet) {
      position: relative;
      @include flex(column, flex-start, flex-start);
      gap: 0;
      padding-right: 3rem;
    }
  }

  &__list-item-date {
    margin-left: func.rem(5);
    margin-right: 1.5em;
    @media screen and (width < b.$account-page-tablet) {
      font-size: 0.825em;
      margin: 0;
      margin-top: 0.5em;
    }
  }

  &__list-item-title {
    flex-grow: 1;
    color: c.$viewing-restriction-input-blue;
    margin-block: func.rem(14);
    @media screen and (width < b.$account-page-tablet) {
      margin-block: 0.5em;
    }
  }

  &__list-item-report-text {
    @media screen and (width < b.$account-page-tablet) {
      font-size: 0.9em;
      margin-bottom: 1.5em;
    }
  }

  &__rating-btn {
    background-color: transparent;
    border: none;
    cursor: pointer;
    font: inherit;
    color: c.$viewing-restriction-label-inactive-text;
    transition: 150ms ease-in-out;
    &:hover {
      color: inherit;
    }
    & svg {
      width: func.rem(24);
      aspect-ratio: 1;

      &.filled {
        color: c.$profile-edit-maturity-ratings-bg;
      }
    }
  }

  &__list-item-hiding-btn-wrapper {
    @media screen and (width >= b.$account-page-tablet) {
      position: relative;
    }

    & span {
      position: absolute;
      right: 0;
      top: 0;
      translate: 15% -100%;
      opacity: 0;
      visibility: hidden;
      transition: v.$main-transition;
      font-size: 0.7em;
      line-height: 0.7em;
      padding: 0.5em;
      background-color: c.$white;
      border: func.rem(1) solid c.$black;
      text-wrap: nowrap;
    }

    &:hover span {
      opacity: 1;
      visibility: visible;
    }
  }

  &__list-item-remove-btn {
    background: transparent;
    border: none;
    font-size: func.rem(26);
    cursor: pointer;
    @media screen and (width < b.$account-page-tablet) {
      position: absolute;
      top: 0;
      right: 0;
    }
  }

  &__btns-wrapper {
    @include flex(row, space-between, center);
    margin-top: 1.5em;
    @media screen and (width < b.$account-page-tablet) {
      margin-inline: auto;
      flex-direction: column-reverse;
      gap: 1em;
      width: max-content;
    }

    & > * {
      @include flex();
      gap: 1em;
      font-weight: normal;
      @media screen and (width < b.$mobile-medium) {
        &:first-child {
          flex-direction: column;
          gap: 0;
          width: 100%;
          & * {
            height: func.rem(50);
            padding: 0;
            display: grid;
            place-content: center;
            font-size: v.$font-base;
          }
        }
      }
    }
  }

  &__operating-btn {
    background: transparent;
    border: none;
    padding: 0;
    outline-offset: 0.25em;
    font: inherit;
    font-weight: normal;
    line-height: 100%;
    color: c.$viewing-restriction-input-blue;
    cursor: pointer;
    &:last-child {
      position: relative;
      &::before {
        position: absolute;
        content: "";
        left: 0;
        top: 0;
        width: func.rem(1);
        height: 100%;
        background-color: c.$gray-light;
        translate: -0.5em;
      }
    }
    &:hover {
      text-decoration: underline;
    }
  }
}
