@use "../../abstracts/mixins" as *;
@use "../../abstracts/colors" as c;
@use "../../abstracts/variables" as v;
@use "../../base/breakpoints" as b;
@use "../../base/functions" as func;

.choose-profile {
  min-height: 100dvh;
  max-width: 80%;
  margin-inline: auto;
  display: grid;
  place-content: center;
  place-items: center;

  &__header {
    margin-bottom: 0.5em;
    color: c.$white;
    font-weight: 400;
    text-align: center;
    @media screen and (width > b.$mobile) {
      font-size: 3.5vw;
    }
    @media screen and (width <= b.$mobile) {
      font-size: func.rem(30);
    }
  }

  &__list {
    @include flex(row, center);
    flex-wrap: wrap;
    & > *:not(:last-child) {
      margin-right: 2vw;
    }
  }

  &__manage-profiles {
    border: func.rem(1) solid c.$gray-text;
    padding: 0.5em 1.5em;
    margin-block: 2em 1em;
    color: c.$gray-text;
    font-weight: 500;
    outline-color: transparent;
    @media screen and (width > b.$mobile) {
      font-size: 1.2vw;
    }
    @media screen and (width <= b.$mobile) {
      font-size: v.$font-size-body;
    }
    &:where(:hover, :focus-visible) {
      color: c.$main-text-color;
      border-color: c.$main-text-color;
    }
    &:where(:focus-visible) {
      outline-offset: func.rem(-1);
      border-radius: 0.25em;
    }
  }

  &__lock-modal {
    min-height: 100dvh;
    min-width: 100dvw;
    padding: 0;
    border: none;
    @include flex(column, center, center);
    background: inherit;
    text-align: center;
    text-wrap: balance;
    font-size: clamp(1rem, calc(0.86rem + 0.71vw), 1.75rem);

    &::backdrop {
      background-color: c.$black;
    }
  }

  &__lock-close-btn {
    position: absolute;
    top: 6em;
    right: 3em;
    background: transparent;
    border: none;
    padding: 0.25em;
    color: c.$gray-light;
    cursor: pointer;
    @media screen and (width <= b.$desktop-account) {
      top: 3em;
      right: 1.5em;
    }
  }

  &__lock-subheading {
    color: hsl(0, 0%, 67%);
  }

  &__lock-heading {
    color: c.$white;
    font-size: clamp(1.88rem, calc(1.57rem + 0.75vw), 4rem);
    font-weight: 500;
    margin-top: 0.25em;
    margin-bottom: 1em;
    &.incorrect {
      color: #e6b209;
    }
  }

  &__lock-form {
    position: relative;
    translate: 0 calc(v.$font-size-user-settings-page-warning-text * -2);
  }

  hgroup {
    translate: 0 calc(v.$font-size-user-settings-page-warning-text * -2);
  }

  &__pin-wrapper {
    @include flex(row, center, center);
    gap: 0.5em;

    & input {
      font: inherit;
      height: 3em;
      aspect-ratio: 1;
      background-color: transparent;
      border: func.rem(1) solid c.$white;
      transition: 150ms ease-in-out;
      text-align: center;
      outline: none;
      color: c.$white;
      &:focus {
        scale: 1.1;
      }
    }
  }

  &__lock-error-message {
    color: c.$error-message;
    font-size: v.$font-size-user-settings-page-warning-text;
    line-height: v.$font-size-user-settings-page-warning-text;
    position: absolute;
    width: 100%;
    bottom: 0;
    translate: 0 200%;
  }

  &__forgot-link {
    position: absolute;
    bottom: 2em;
    padding: 0.5em;
    background-color: transparent;
    color: c.$gray-light;
    transition: 0.35s cubic-bezier(0.86, 0, 0.07, 1);
    @media screen and (width <= b.$desktop-account) {
      bottom: 1em;
    }
    &:where(:hover, :focus-visible) {
      background-color: rgba(51, 51, 51, 0.4);
      scale: 1.05;
    }
  }
}
